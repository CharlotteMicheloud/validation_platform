# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  workflow_dispatch
  workflow_call

name: Test R package

jobs:
  test_r_package:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # - {os: macos-latest,   r: 'devel'}
          - {os: macos-latest,   r: 'release'}
          # - {os: macos-latest,   r: 'oldrel'}
          # - {os: macos-latest,   r: 'oldrel-1'}
          # - {os: macos-13,       r: 'devel'}
          - {os: macos-13,       r: 'release'}
          # - {os: macos-13,       r: 'oldrel'}
          # - {os: macos-13,       r: 'oldrel-1'}
          # - {os: windows-latest, r: 'devel'}
          - {os: windows-latest, r: 'release'}
          # - {os: windows-latest, r: 'oldrel'}
          # - {os: windows-latest, r: 'oldrel-1'}
          # - {os: windows-2019, r: 'devel'}
          - {os: windows-2019, r: 'release'}
          # - {os: windows-2019, r: 'oldrel'}
          # - {os: windows-2019, r: 'oldrel-1'}
          # - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          # - {os: ubuntu-latest,   r: 'oldrel'}
          # - {os: ubuntu-latest,   r: 'oldrel-1'}
          # - {os: ubuntu-20.04,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-20.04,   r: 'release'}
          # - {os: ubuntu-20.04,   r: 'oldrel'}
          # - {os: ubuntu-20.04,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      NUMBER: ${{ github.event.issue.number }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install dependencies
        run: Rscript -e 'install.packages(c("jsonlite", "cranlogs", "crayon", "dplyr", "glue", "lubridate", "sessioninfo", "testthat", "rmarkdown", "knitr", "kableExtra", "magrittr", "devtools", "readr", "tidyr", "pkgsearch"))'

      - name: Install validation
        run: Rscript -e 'install.packages("validation", repos = "https://ctu-bern.r-universe.dev", dependencies = TRUE)'

      - name: Run script to test package
        id: pkgtest
        run: Rscript -e 'source("resources/test_pkg.R")'

      - name: commit updated tests CSV
        if: steps.pkgtest.outcome == 'success'
        run: |
          git add tables/package_tests.csv
          git commit -m "add new tests" || echo "No changes to commit"
          git push origin main || echo "No changes to commit"

  update_tab:
    name: update test table
    runs-on: macOS-latest
    needs: [test_r_package]
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      # - uses: managedkaos/print-env@v1.0
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2

      - name: Install dependencies
        run: Rscript -e 'install.packages(c("jsonlite", "cranlogs", "crayon", "dplyr", "glue", "lubridate", "sessioninfo", "testthat", "rmarkdown", "knitr", "kableExtra", "magrittr", "devtools", "readr", "tidyr", "pkgsearch"))'

      - name: Install validation
        run: Rscript -e 'install.packages("validation", repos = "https://ctu-bern.r-universe.dev", dependencies = TRUE)'

      - name: Run script to calculate risk and post comment
        id: pkgtest
        run: Rscript -e 'source("resources/update_tests_table.R")'

      - name: commit updated tests CSV
        if: steps.pkgtest.outcome == 'success'
        run: |
          git add tables/package_tests.csv
          git commit -m "add new tests" || echo "No changes to commit"
          git push origin main || echo "No changes to commit"
