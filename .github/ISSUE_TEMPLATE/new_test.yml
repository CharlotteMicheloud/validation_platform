name: Add package/function testing results for tests within the SCTO framework
description: I.e. for tests that are programmed by an SCTO-associated statistician and stored within the `validation_tests` repository
title: "[Package test]: XXX version YYY"
labels: ["test", ":alarm_clock: triage :alarm_clock:"]
body:
  - type: markdown
    attributes:
      value: |
        Thanks for taking the time to fill out this package testing report!
        Please replace XXX in the issue title with the package name, and YYY with the package version.
        Remember, the validation::test function prepares the majority of the output for you.
  - type: input
    id: contact
    attributes:
      label: Name
      description: What is your name?
      placeholder: ex. Joe Bloggs
    validations:
      required: false
  - type: input
    id: package
    attributes:
      label: Name of the package you have tested
      placeholder: e.g. ggplot2
    validations:
      required: true
  - type: markdown
    attributes:
      value: |
        ## Traceability
        in order to tell precisely what was tested, we need to know exactly what version of the package was tested, and where it was installed from.
  - type: input
    id: version
    attributes:
      label: What version of the package have you tested?
      placeholder: e.g. 1.12.3
    validations:
      required: true
  - type: input
    id: package_source
    attributes:
      label: Where was the package installed from?
      description: |
        CRAN, BioConductor, GitHub, etc. Copy/paste the output from the R console.
        Note that `validation` will attempt to extract this information for you, but you should verify it.
        For CRAN and BioConductor, "CRAN" or "BioConductor" is enough.
        For GitHub, please provide the URL.
        If installed from an r-universe, the reference should be to the underlying GitHub repository, not the r-universe.
      placeholder: e.g. CRAN, BioConductor, https://www.github.com/CTU-Bern/...
    validations:
      required: true
  - type: input
    id: package_ref
    attributes:
      label: If the package was installed from GitHub or similar (including r-universe), please provide a commit reference
      description: |
        Note that `validation` will attempt to extract this information for you, but you should verify it.
        If installed from an r-universe, the reference SHA returned by `validation` represents the current version on the r-universe. If you are using an older version, reinstall the package and rerun the tests (recovery of the older reference is difficult).
      placeholder: e.g. 94065ff4ea9021271d4e8ff5e71011237d97d583
    validations:
      required: true
  - type: input
    id: test_date
    attributes:
      label: When was this package tested?
      description: Please use ODBC format - YYYY-MM-DD
      placeholder: YYYY-MM-DD
    validations:
      required: true
  - type: textarea
    id: test_scrutiny
    attributes:
      label: What was tested?
      description: Copy this from the info.txt file in the package testing directory
    validations:
      required: true
  - type: dropdown
    id: test_result
    attributes:
      label: Test results
      description: Did all programmed tests pass?
      options:
        - PASS
        - FAIL
    validations:
      required: true
  - type: textarea
    id: test_evidence
    attributes:
      label: Test output
      description: |
        Copy output from the R console.
        This should include a table as well as any error or warning messages.
    validations:
      required: true
  - type: textarea
    id: session_info
    attributes:
      label: Session info
      description: Copy output from the R console.
  - type: input
    id: code_location
    attributes:
      label: Where is the test code located for these tests?
      description: Copy the link to the validation_test package directory or other location for the tests
    validations:
      required: true
  - type: input
    id: code_sha
    attributes:
      label: Where the test code is located in a git repository, add the git commit SHA
      description: |
        This is the random combination of digits and characters that identifies a specific commit. The first six characters is enough.
        This may also be an SVN commit number, if the code is stored in an SVN repository.
